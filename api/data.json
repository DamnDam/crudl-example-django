create /api/entries/, /api/entries/nested/

{
    "user": 1,
    "title": "xxx",
    "date": "2016-01-01",
    "date_from": null,
    "date_until": null,
    "sticky": false,
    "status": "1",
    "category": 1,
    "tags": [3, 14],
    "body": ""
}

create /api/entries-nested-read-write/
new category is created and assigned to the entry

{
    "user": 1,
    "title": "xxx",
    "date": "2016-01-01",
    "date_from": null,
    "date_until": null,
    "sticky": false,
    "status": "1",
    "category": {
        "user": 1,
        "name": "yyy",
        "slug": "yyy",
        "position": 1000
    },
    "tags": [],
    "body": ""
}

create /api/entries-nested-read-write/
new category and tags are created and assigned to the entry

{
    "user": 1,
    "title": "xxx",
    "date": "2016-01-01",
    "date_from": null,
    "date_until": null,
    "sticky": false,
    "status": "1",
    "category": {
        "user": 1,
        "name": "yyy",
        "slug": "yyy",
        "position": 1000
    },
    "tags": [
        {
            "user": 1,
            "name": "yyy",
            "slug": "yyy"
        },
        {
            "user": 1,
            "name": "yyy",
            "slug": "yyy"
        }
    ],
    "body": ""
}

update /api/entries-nested-read-write/
new category and tags attributes are saved, new tag is created
and all entry attributes and relations are saved.
if ID is given with either category or tag, we update the instance â€“
otherwise we create a new one.

{
    "user": 2,
    "title": "xxx",
    "date": "2015-12-31",
    "date_from": null,
    "date_until": null,
    "sticky": false,
    "status": "1",
    "category": {
        "id": 1174,
        "user": 1,
        "name": "zzz",
        "slug": "zzz",
        "position": 1000
    },
    "tags": [
        {
            "id": 140,
            "user": 1,
            "name": "yyy",
            "slug": "yyy"
        },
        {
            "id": 141,
            "user": 1,
            "name": "yyy",
            "slug": "yyy"
        },
        {
            "user": 1,
            "name": "zzz",
            "slug": "zzz"
        }
    ],
    "body": ""
}

with the example below, we add a new category because no category ID is given.

{
    "user": 2,
    "title": "zzz",
    "date": "2015-12-31",
    "date_from": null,
    "date_until": null,
    "sticky": false,
    "status": "1",
    "category": {
        "user": 1,
        "name": "111",
        "slug": "111",
        "position": 1000
    },
    "body": ""
}
